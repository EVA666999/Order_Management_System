version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: test_case_db 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Kohkau11999
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0  # Новая версия от Confluent
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  celery-worker:
    image: python:3.10-slim
    working_dir: /app
    volumes:
      - .:/app
    command: bash -c "pip install -r requirements.txt && celery -A app.tasks.order_task worker --loglevel=info"
    depends_on:
      - redis
      - kafka
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DB_HOST_local=postgres

  backend:
    image: python:3.10-slim
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: bash -c "pip install -r requirements.txt && 
                    echo 'Waiting for db to be ready...' &&
                    sleep 5 &&
                    alembic upgrade head && 
                    uvicorn app.main:app --host 0.0.0.0 --port 8000"
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - DB_HOST_local=postgres

volumes:
  postgres_data: